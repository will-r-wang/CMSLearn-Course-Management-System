@startuml
title Visitor Pattern Class Diagram

class Client << (S, orchid) >>
Client --> AbstractVisitor
Client --> Visitable

AbstractVisitor <|.down. CommentsVisitor
AbstractVisitor <|.down. GradesVisitor

Visitable <|.down. Submission
Visitable <|.down. Student

interface AbstractVisitor {
  visit()
}

interface Visitable {
  accept(a_visitor)
}

class CommentsVisitor {
  visit(Visitable: Submission)
}

class GradesVisitor {
  visit(Visitable: Submission)
  visit(Visitable: Student)
}

class Submission {
  accept(AbstractVisitor: CommentsVisitor)
  accept(AbstractVisitor: GradesVisitor)
  update_grade()
  update_comment()
}

class Student {
  accept(AbstractVisitor: GradesVisitor)
  update_grade()
}
@enduml

